@if (Section != null)
{
    <div class="cheat-section">
        <h5>
            @Section.Name (@Section.Cheats.Count)
            <button class="btn btn-danger btn-sm rounded-0" type="button" data-toggle="tooltip" data-placement="top" title="Delete" @onclick="DeleteSection">
                <i class="oi oi-trash"></i>
            </button>
        </h5>
        <ul class="dropzone @dropClass" 
            ondragover="event.preventDefault();"
            ondragstart="event.dataTransfer.setData('', event.target.id);"
            @ondrop="HandleDrop"
            @ondragenter="HandleDragEnter"
            @ondragleave="HandleDragLeave">

            @foreach (var cheat in Section.Cheats)
            {
                <CheatView CheatModel="cheat" />
            }

        </ul>
    </div>
}

@code {

    private string dropClass = string.Empty;
    
    [CascadingParameter] 
    public CheatsContainer Container { get; set; }

    [Parameter]
    public Data.CheatSection? Section { get; set; }
    
    [Parameter]
    public Action<string>? KillMe { get; set; }
    
    protected override void OnParametersSet()
    {
        Section = Container.Sections.FirstOrDefault(x => x.Name.Equals(Section?.Name));
    }

    private void HandleDragEnter() => dropClass = "can-drop";

    private void HandleDragLeave() => dropClass = string.Empty;

    private async Task HandleDrop(DragEventArgs obj)
    {
        dropClass = string.Empty;
        await Container.MoveCheat(Section?.Name ?? string.Empty);
    }

    private void DeleteSection() => KillMe?.Invoke(Section?.Name ?? string.Empty);
}